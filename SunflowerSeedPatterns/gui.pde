/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:515131:
  appc.background(230);
} //_CODE_:window1:515131:

public void turnSizeSliderChanged(GSlider source, GEvent event) { //_CODE_:turnSizeSlider:393673:
  turnSize = turnSizeSlider.getValueF();
  reGrow();
} //_CODE_:turnSizeSlider:393673:

public void pauseButtonClicked(GButton source, GEvent event) { //_CODE_:pauseButton:786814:
  paused = !paused;
  pausedProcedure();
} //_CODE_:pauseButton:786814:

public void resetButtonClicked(GButton source, GEvent event) { //_CODE_:resetButton:504671:
  reGrow();
} //_CODE_:resetButton:504671:

public void demoButton1Clicked(GButton source, GEvent event) { //_CODE_:demoButton1:230098:
  turnSize = 0.61803;
  reGrow();
} //_CODE_:demoButton1:230098:

public void demoButton2Clicked(GButton source, GEvent event) { //_CODE_:demoButton2:371082:
  turnSize = 0.1;
  reGrow();
} //_CODE_:demoButton2:371082:

public void demoButton3Clicked(GButton source, GEvent event) { //_CODE_:demoButton3:686538:
  turnSize = 5/6.0;
  reGrow();
} //_CODE_:demoButton3:686538:

public void demoButton8Clicked(GButton source, GEvent event) { //_CODE_:demoButton8:336778:
  turnSize = 1.0/exp(1);
  reGrow();
} //_CODE_:demoButton8:336778:

public void demoButton5Clicked(GButton source, GEvent event) { //_CODE_:demoButton5:857646:
  turnSize = 1/2.01;
  reGrow();
} //_CODE_:demoButton5:857646:

public void demoButton6Clicked(GButton source, GEvent event) { //_CODE_:demoButton6:343888:
  turnSize = 0.7;
  reGrow();
} //_CODE_:demoButton6:343888:

public void turnSizeFieldChanged(GTextField source, GEvent event) { //_CODE_:turnSizeField:463863:
  prevTurnSize = turnSize;
  turnSize = min( float(turnSizeField.getText()), 1.0 );
  if (turnSize != prevTurnSize)
    reGrow();
} //_CODE_:turnSizeField:463863:

public void demoButton7Clicked(GButton source, GEvent event) { //_CODE_:demoButton7:380194:
  turnSize = sqrt(2)/2.0;
  reGrow();
} //_CODE_:demoButton7:380194:

public void demoButton4Clicked(GButton source, GEvent event) { //_CODE_:demoButton4:663122:
  turnSize = 5/6.02;
  reGrow();
} //_CODE_:demoButton4:663122:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 400, 400, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  turnSizeSlider = new GSlider(window1, 135, 164, 238, 40, 10.0);
  turnSizeSlider.setShowValue(true);
  turnSizeSlider.setLimits(0.61803, 0.0, 1.0);
  turnSizeSlider.setNumberFormat(G4P.DECIMAL, 4);
  turnSizeSlider.setLocalColorScheme(GCScheme.RED_SCHEME);
  turnSizeSlider.setOpaque(false);
  turnSizeSlider.addEventHandler(this, "turnSizeSliderChanged");
  label1 = new GLabel(window1, 19, 133, 358, 26);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Enter a value in the box or drag the slider to change the turn size");
  label1.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  label1.setOpaque(true);
  pauseButton = new GButton(window1, 11, 6, 80, 30);
  pauseButton.setText("Pause");
  pauseButton.setLocalColorScheme(GCScheme.RED_SCHEME);
  pauseButton.addEventHandler(this, "pauseButtonClicked");
  resetButton = new GButton(window1, 308, 6, 80, 30);
  resetButton.setText("Re-grow");
  resetButton.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  resetButton.addEventHandler(this, "resetButtonClicked");
  label2 = new GLabel(window1, 12, 46, 376, 80);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Adjusting the turn size: The turn size determines the angle between the newest seed and the next seed to be grown. It is expressed as a percentage of a full turn (2π rad). For example, a turn size of 0.5 would mean that the angle between consecutive seeds would be 50% of a full turn (π rad). ");
  label2.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  label2.setOpaque(true);
  label3 = new GLabel(window1, 17, 224, 364, 27);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Cool demos - Set the turn size equal to:");
  label3.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  label3.setOpaque(true);
  demoButton1 = new GButton(window1, 16, 262, 95, 30);
  demoButton1.setText("ϕ (0.61803)");
  demoButton1.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  demoButton1.addEventHandler(this, "demoButton1Clicked");
  demoButton2 = new GButton(window1, 122, 262, 80, 30);
  demoButton2.setText("1/10");
  demoButton2.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  demoButton2.addEventHandler(this, "demoButton2Clicked");
  demoButton3 = new GButton(window1, 217, 263, 80, 30);
  demoButton3.setText("5/6");
  demoButton3.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  demoButton3.addEventHandler(this, "demoButton3Clicked");
  demoButton8 = new GButton(window1, 305, 300, 80, 30);
  demoButton8.setText("1/e");
  demoButton8.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  demoButton8.addEventHandler(this, "demoButton8Clicked");
  demoButton5 = new GButton(window1, 22, 302, 80, 30);
  demoButton5.setText("1/2.01");
  demoButton5.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  demoButton5.addEventHandler(this, "demoButton5Clicked");
  demoButton6 = new GButton(window1, 121, 302, 80, 30);
  demoButton6.setText("7/10");
  demoButton6.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  demoButton6.addEventHandler(this, "demoButton6Clicked");
  label4 = new GLabel(window1, 9, 342, 380, 48);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("* Observe the difference between rational turn sizes (like 1/10) and irrational turn sizes (like ϕ and sqrt(2)/2). Namely, for rational turn sizes, observe the number of spiral arms. ");
  label4.setOpaque(false);
  turnSizeField = new GTextField(window1, 26, 165, 102, 30, G4P.SCROLLBARS_NONE);
  turnSizeField.setPromptText("Enter a decimal");
  turnSizeField.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  turnSizeField.setOpaque(true);
  turnSizeField.addEventHandler(this, "turnSizeFieldChanged");
  demoButton7 = new GButton(window1, 216, 301, 80, 30);
  demoButton7.setText("sqrt(2)/2");
  demoButton7.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  demoButton7.addEventHandler(this, "demoButton7Clicked");
  demoButton4 = new GButton(window1, 306, 263, 80, 30);
  demoButton4.setText("5/6.02");
  demoButton4.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  demoButton4.addEventHandler(this, "demoButton4Clicked");
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GSlider turnSizeSlider; 
GLabel label1; 
GButton pauseButton; 
GButton resetButton; 
GLabel label2; 
GLabel label3; 
GButton demoButton1; 
GButton demoButton2; 
GButton demoButton3; 
GButton demoButton8; 
GButton demoButton5; 
GButton demoButton6; 
GLabel label4; 
GTextField turnSizeField; 
GButton demoButton7; 
GButton demoButton4; 
